{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_guards/auth.guard.ts","webpack:///./src/app/_interceptors/error-interceptor.service.ts","webpack:///./src/app/_interceptors/jwt-interceptor.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/enum/CategoryType.ts","webpack:///./src/app/enum/OrderStatus.ts","webpack:///./src/app/enum/ProductStatus.ts","webpack:///./src/app/enum/Role.ts","webpack:///./src/app/models/ProductInOrder.ts","webpack:///./src/app/models/User.ts","webpack:///./src/app/models/productInfo.ts","webpack:///./src/app/pages/card/card.component.css","webpack:///./src/app/pages/card/card.component.html","webpack:///./src/app/pages/card/card.component.ts","webpack:///./src/app/pages/cart/cart.component.css","webpack:///./src/app/pages/cart/cart.component.html","webpack:///./src/app/pages/cart/cart.component.ts","webpack:///./src/app/pages/login/login.component.css","webpack:///./src/app/pages/login/login.component.html","webpack:///./src/app/pages/login/login.component.ts","webpack:///./src/app/pages/order-detail/order-detail.component.css","webpack:///./src/app/pages/order-detail/order-detail.component.html","webpack:///./src/app/pages/order-detail/order-detail.component.ts","webpack:///./src/app/pages/order/order.component.css","webpack:///./src/app/pages/order/order.component.html","webpack:///./src/app/pages/order/order.component.ts","webpack:///./src/app/pages/product-detail/detail.component.css","webpack:///./src/app/pages/product-detail/detail.component.html","webpack:///./src/app/pages/product-detail/detail.component.ts","webpack:///./src/app/pages/product-edit/product-edit.component.css","webpack:///./src/app/pages/product-edit/product-edit.component.html","webpack:///./src/app/pages/product-edit/product-edit.component.ts","webpack:///./src/app/pages/product-list/product.list.component.css","webpack:///./src/app/pages/product-list/product.list.component.html","webpack:///./src/app/pages/product-list/product.list.component.ts","webpack:///./src/app/pages/signup/signup.component.css","webpack:///./src/app/pages/signup/signup.component.html","webpack:///./src/app/pages/signup/signup.component.ts","webpack:///./src/app/pages/user-edit/user-detail.component.css","webpack:///./src/app/pages/user-edit/user-detail.component.html","webpack:///./src/app/pages/user-edit/user-detail.component.ts","webpack:///./src/app/parts/navigation/navigation.component.css","webpack:///./src/app/parts/navigation/navigation.component.html","webpack:///./src/app/parts/navigation/navigation.component.ts","webpack:///./src/app/parts/pagination/pagination.component.css","webpack:///./src/app/parts/pagination/pagination.component.html","webpack:///./src/app/parts/pagination/pagination.component.ts","webpack:///./src/app/services/cart.service.ts","webpack:///./src/app/services/order.service.ts","webpack:///./src/app/services/product.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {Observable} from 'rxjs';\nimport {UserService} from \"../services/user.service\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n\n    constructor(\n        private router: Router,\n        private userService: UserService\n    ) {\n    }\n\n    canActivate(\n        route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n        const currentUser = this.userService.currentUserValue;\n        if (currentUser) {\n            // check if route is restricted by role\n            if (route.data.roles && route.data.roles.indexOf(currentUser.role) === -1) {\n                console.log(currentUser.role + \"fail in \" + route.data.roles);\n                // role not authorised so redirect to home page\n                this.router.navigate(['/']);\n                return false;\n            }\n            // authorised so return true\n            return true;\n        }\n\n        console.log(\"Need log in\");\n        // not logged in so redirect to login page with the return url{queryParams: {returnUrl: state.url}}\n        this.router.navigate(['/login'], {queryParams: {returnUrl: state.url}});\n        return false;\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from \"@angular/common/http\";\nimport {UserService} from \"../services/user.service\";\nimport {Observable, throwError} from \"rxjs\";\nimport {catchError} from \"rxjs/operators\";\nimport {Router} from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private userService: UserService,\n                private router: Router) {\n    }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(catchError(err => {\n      if (err.status === 401) {\n        // auto logout if 401 response returned from api\n        this.userService.logout();\n          this.router.navigate(['/login']);\n      }\n\n        const error = err.error || err.statusText;\n      return throwError(error);\n    }))\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {UserService} from \"../services/user.service\";\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class JwtInterceptor implements HttpInterceptor {\n\n\n    constructor(private userService: UserService,\n    ) {\n\n    }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add authorization header with jwt token if available\n        const currentUser = this.userService.currentUserValue;\n        if (currentUser && currentUser.token) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: `${currentUser.type} ${currentUser.token}`,\n                    'Content-Type': 'application/json'\n                }\n            });\n        }\n        return next.handle(request);\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {CardComponent} from './pages/card/card.component';\nimport {LoginComponent} from './pages/login/login.component';\nimport {SignupComponent} from './pages/signup/signup.component';\nimport {DetailComponent} from './pages/product-detail/detail.component';\nimport {CartComponent} from './pages/cart/cart.component';\nimport {AuthGuard} from \"./_guards/auth.guard\";\nimport {OrderComponent} from \"./pages/order/order.component\";\nimport {OrderDetailComponent} from \"./pages/order-detail/order-detail.component\";\nimport {ProductListComponent} from \"./pages/product-list/product.list.component\";\nimport {UserDetailComponent} from \"./pages/user-edit/user-detail.component\";\nimport {ProductEditComponent} from \"./pages/product-edit/product-edit.component\";\nimport {Role} from \"./enum/Role\";\n\nconst routes: Routes = [\n    {path: '', redirectTo: '/product', pathMatch: 'full'},\n    {path: 'product/:id', component: DetailComponent},\n    {path: 'category/:id', component: CardComponent},\n    {path: 'product', component: CardComponent},\n    {path: 'category', component: CardComponent},\n    {path: 'login', component: LoginComponent},\n    {path: 'logout', component: LoginComponent},\n    {path: 'register', component: SignupComponent},\n    {path: 'cart', component: CartComponent},\n    {path: 'success', component: SignupComponent},\n    {path: 'order/:id', component: OrderDetailComponent, canActivate: [AuthGuard]},\n    {path: 'order', component: OrderComponent, canActivate: [AuthGuard]},\n    {path: 'seller', redirectTo: 'seller/product', pathMatch: 'full'},\n    {\n        path: 'seller/product',\n        component: ProductListComponent,\n        canActivate: [AuthGuard],\n        data: {roles: [Role.Manager, Role.Employee]}\n    },\n    {\n        path: 'profile',\n        component: UserDetailComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'seller/product/:id/edit',\n        component: ProductEditComponent,\n        canActivate: [AuthGuard],\n        data: {roles: [Role.Manager, Role.Employee]}\n    },\n    {\n        path: 'seller/product/:id/new',\n        component: ProductEditComponent,\n        canActivate: [AuthGuard],\n        data: {roles: [Role.Employee]}\n    },\n\n];\n\n@NgModule({\n    declarations: [],\n    imports: [\n        RouterModule.forRoot(routes)//{onSameUrlNavigation: 'reload'}\n    ],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div class=\\\"container\\\">\\n<app-navigation></app-navigation>\\n<router-outlet></router-outlet>\\n    <div class=\\\"container\\\">\\n        <br>\\n        <br>\\n        <hr>\\n        <div class=\\\"text-center\\\">\\n            <a style=\\\"color: inherit\\\" href=\\\"https://github.com/zhulinn\\\"><i class=\\\"fab fa-github fa-3x\\\"></i></a>\\n        </div>\\n\\n\\n        <!--Copyright-->\\n        <div class=\\\"footer-copyright py-3 text-center\\\">\\n            © 2019 Copyright:\\n            <a href=\\\"https://zlin.me\\\"> zlin.me </a>\\n        </div>\\n        <!--/.Copyright-->\\n    </div>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'shop';\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {NavigationComponent} from './parts/navigation/navigation.component';\nimport {CardComponent} from './pages/card/card.component';\nimport {PaginationComponent} from './parts/pagination/pagination.component';\nimport {AppRoutingModule} from './app-routing.module';\nimport {LoginComponent} from './pages/login/login.component';\nimport {SignupComponent} from './pages/signup/signup.component';\nimport {DetailComponent} from './pages/product-detail/detail.component';\nimport {FormsModule} from '@angular/forms';\nimport {HTTP_INTERCEPTORS, HttpClientModule} from '@angular/common/http';\nimport {CartComponent} from './pages/cart/cart.component';\nimport {CookieService} from \"ngx-cookie-service\";\nimport {ErrorInterceptor} from \"./_interceptors/error-interceptor.service\";\nimport {JwtInterceptor} from \"./_interceptors/jwt-interceptor.service\";\nimport {OrderComponent} from './pages/order/order.component';\nimport {OrderDetailComponent} from './pages/order-detail/order-detail.component';\nimport {ProductListComponent} from './pages/product-list/product.list.component';\nimport {UserDetailComponent} from './pages/user-edit/user-detail.component';\nimport {ProductEditComponent} from './pages/product-edit/product-edit.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        NavigationComponent,\n        CardComponent,\n        PaginationComponent,\n        LoginComponent,\n        SignupComponent,\n        DetailComponent,\n        CartComponent,\n        OrderComponent,\n        OrderDetailComponent,\n        ProductListComponent,\n        UserDetailComponent,\n        ProductEditComponent,\n\n    ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        FormsModule,\n        HttpClientModule,\n\n    ],\n    providers: [CookieService,\n        {provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true},\n        {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true}],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","export enum CategoryType {\n    \"Books\", \"Food\", \"Clothes\", \"Drink\"\n}\n","export enum OrderStatus {\n    \"New\",\n    \"Finished\",\n    \"Cenceled\"\n}\n","export enum ProductStatus {\n    \"Available\", \"Unavailable\"\n}\n","export enum Role {\n    Customer = 'ROLE_CUSTOMER',\n    Employee = 'ROLE_EMPLOYEE',\n    Manager = 'ROLE_MANAGER'\n}\n","import {ProductInfo} from \"./productInfo\";\n\nexport class ProductInOrder {\n    productId: string;\n    productName: string;\n    productPrice: number;\n    productStock: number;\n    productDescription: string;\n    productIcon: string;\n    categoryType: number;\n    count: number;\n\n    constructor(productInfo:ProductInfo, quantity = 1){\n        this.productId = productInfo.productId;\n        this.productName = productInfo.productName;\n        this.productPrice = productInfo.productPrice;\n        this.productStock = productInfo.productStock;\n        this.productDescription = productInfo.productDescription;;\n        this.productIcon = productInfo.productIcon;\n        this.categoryType = productInfo.categoryType;\n        this.count = quantity;\n    }\n}\n","import {Role} from \"../enum/Role\";\n\nexport class User {\n\n    email: string;\n\n    password: string;\n\n    name: string;\n\n    phone: string;\n\n    address: string;\n\n    active: boolean;\n\n    role: string;\n\n    constructor(){\n        this.active = true;\n        this.role = Role.Customer;\n    }\n}\n","import {ProductInOrder} from \"./ProductInOrder\";\n\nexport class ProductInfo {\n    productId: string;\n    productName: string;\n    productPrice: number;\n    productStock: number;\n    productDescription: string;\n    productIcon: string;\n    productStatus: number; // 0: onsale 1: offsale\n    categoryType: number;\n    createTime: string;\n    updateTime: string;\n\n\n    constructor(productInOrder?: ProductInOrder) {\n        if (productInOrder) {\n            this.productId = productInOrder.productId;\n            this.productName = productInOrder.productName;\n            this.productPrice = productInOrder.productPrice;\n            this.productStock = productInOrder.productStock;\n            this.productDescription = productInOrder.productDescription;\n            this.productIcon = productInOrder.productIcon;\n            this.categoryType = productInOrder.categoryType;\n            this.productStatus = 0;\n        } else {\n            this.productId = '';\n            this.productName = '';\n            this.productPrice = 20;\n            this.productStock = 100;\n            this.productDescription = '';\n            this.productIcon = '';\n            this.categoryType = 0;\n            this.productStatus = 0;\n        }\n    }\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhcmQvY2FyZC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1 align=\\\"center\\\" class=\\\"display-4 mb-5\\\">{{title}}</h1>\\n<div class=\\\"row card-deck text-center\\\">\\n  <div *ngFor=\\\"let productInfo of page?.content\\\" class=\\\"col-lg-4 \\\">\\n    <div class=\\\"card mb-4\\\"  >\\n      <img height=\\\"50%\\\" class=\\\"card-img-top\\\" src=\\\"{{productInfo.productIcon}}\\\" alt=\\\"{{productInfo.productName}}\\\">\\n      <div class=\\\"card-body\\\">\\n        <h4 class=\\\"card-title \\\">{{productInfo.productName}}</h4>\\n        <div class=\\\"text-left\\\">\\n          <p class=\\\"card-test\\\"><strong>Description: </strong>{{productInfo.productDescription}}</p>\\n          <p class=\\\"card-text\\\"><strong>Price: </strong>{{productInfo.productPrice | currency}}</p>\\n          <p class=\\\"card-text\\\"><strong>Stock: </strong>{{productInfo.productStock}}</p>\\n        </div>\\n        <br>\\n        <a routerLink=\\\"/product/{{productInfo.productId}}\\\" *ngIf=\\\"productInfo.productStatus == 0; else offBlock\\\"\\n           class=\\\"btn btn-primary btn-lg\\\"\\n        >Get It!</a>\\n        <ng-template #offBlock><a class=\\\"btn btn-secondary btn-lg disabled\\\">Unavailable</a></ng-template>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<app-pagination  [currentPage]=\\\"page\\\" ></app-pagination>\\n\"","import {Component, OnDestroy, OnInit} from '@angular/core';\n// import {prod, products} from '../shared/mockData';\nimport {ProductService} from '../../services/product.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {Subscription} from \"rxjs\";\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class CardComponent implements OnInit, OnDestroy {\n\n\n  title: string;\n  page: any;\n  private paramSub: Subscription;\n  private querySub: Subscription;\n\n\n  constructor(private productService: ProductService,\n              private route: ActivatedRoute) {\n\n  }\n\n\n  ngOnInit() {\n    this.querySub = this.route.queryParams.subscribe(() => {\n      this.update();\n    });\n    this.paramSub = this.route.params.subscribe(() => {\n      this.update();\n    });\n\n  }\n\n  ngOnDestroy(): void {\n    this.querySub.unsubscribe();\n    this.paramSub.unsubscribe();\n  }\n\n  update() {\n    if (this.route.snapshot.queryParamMap.get('page')) {\n      const currentPage = +this.route.snapshot.queryParamMap.get('page');\n      const size = +this.route.snapshot.queryParamMap.get('size');\n      this.getProds(currentPage, size);\n    } else {\n      this.getProds();\n    }\n  }\n  getProds(page: number = 1, size: number = 3) {\n    if (this.route.snapshot.url.length == 1) {\n      this.productService.getAllInPage(+page, +size)\n        .subscribe(page => {\n          this.page = page;\n          this.title = 'Get Whatever You Want!';\n        });\n    } else { //  /category/:id\n      const type = this.route.snapshot.url[1].path;\n      this.productService.getCategoryInPage(+type, page, size)\n        .subscribe(categoryPage => {\n          this.title = categoryPage.category;\n          this.page = categoryPage.page;\n        });\n    }\n\n  }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhcnQvY2FydC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1 align=\\\"center\\\" class=\\\"display-4 mb-5\\\">My Cart</h1>\\n\\n<!--Cart Detail Table-->\\n<table class=\\\"table table-striped text-center\\\">\\n    <thead>\\n    <tr>\\n        <th scope=\\\"col\\\">Photo</th>\\n        <th scope=\\\"col\\\">Name</th>\\n        <th scope=\\\"col\\\">Price</th>\\n        <th scope=\\\"col\\\">Quantity</th>\\n        <th scope=\\\"col\\\">Subtotal</th>\\n        <th scope=\\\"col\\\">Action</th>\\n\\n    </tr>\\n    </thead>\\n    <tbody>\\n\\n    <tr *ngFor=\\\"let productInOrder of productInOrders\\\">\\n        <th class=\\\"align-middle\\\" scope=\\\"row\\\">\\n            <a routerLink=\\\"/product/{{productInOrder.productId}}\\\"><img height=\\\"100px\\\"\\n                                                                       src=\\\"{{productInOrder.productIcon}}\\\"\\n                                                                       alt=\\\"{{productInOrder.productName}}\\\"></a>\\n        </th>\\n        <td class=\\\"align-middle\\\"><a\\n                routerLink=\\\"/product/{{productInOrder.productId}}\\\">{{productInOrder.productName}}</a></td>\\n        <td class=\\\"align-middle\\\">{{productInOrder.productPrice | currency}}</td>\\n\\n        <td class=\\\"align-middle\\\">\\n            <a (click)=\\\"minusOne(productInOrder)\\\"><i class=\\\"fa fa-minus\\\"></i></a>\\n            <input min=\\\"1\\\" id=\\\"{{productInOrder.productId}}\\\"\\n                   [max]=productInOrder.productStock\\n                   [(ngModel)]=\\\"productInOrder.count\\\"\\n                   (change)=\\\"onChange(productInOrder)\\\"\\n                   size=\\\"5\\\"\\n                   type=\\\"number\\\"\\n                   required\\n                   name='count'>\\n            <a (click)=\\\"addOne(productInOrder)\\\"> <i class=\\\"fa fa-plus\\\"></i></a>\\n        </td>\\n\\n        <td class=\\\"align-middle\\\">{{productInOrder.productPrice * productInOrder.count|currency}}</td>\\n        <td class=\\\"align-middle\\\">\\n            <a (click)=\\\"remove(productInOrder)\\\" routerLink=\\\"./\\\">Remove</a>\\n        </td>\\n\\n    </tr>\\n\\n    </tbody>\\n</table>\\n\\n<div *ngIf=\\\"productInOrders?.length > 0; else empty\\\">\\n    <h5 style=\\\"display: inline;\\\">Total: {{total | currency}}</h5>\\n    <button (click)=\\\"checkout()\\\" class=\\\"btn btn-warning float-right\\\">Checkout</button>\\n</div>\\n<ng-template #empty>\\n    <h4 class=\\\"text-muted text-center\\\">Cart is empty. Go to get something! :)</h4>\\n</ng-template>\\n\\n\\n\"","import {AfterContentChecked, Component, OnDestroy, OnInit} from '@angular/core';\nimport {CartService} from '../../services/cart.service';\nimport {Subject, Subscription} from 'rxjs';\nimport {UserService} from '../../services/user.service';\nimport {JwtResponse} from '../../response/JwtResponse';\nimport {ProductInOrder} from '../../models/ProductInOrder';\nimport {debounceTime, switchMap} from 'rxjs/operators';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {Role} from '../../enum/Role';\n\n@Component({\n    selector: 'app-cart',\n    templateUrl: './cart.component.html',\n    styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit, OnDestroy, AfterContentChecked {\n\n    constructor(private cartService: CartService,\n                private userService: UserService,\n                private router: Router) {\n        this.userSubscription = this.userService.currentUser.subscribe(user => this.currentUser = user);\n    }\n\n    productInOrders = [];\n    total = 0;\n    currentUser: JwtResponse;\n    userSubscription: Subscription;\n\n    private updateTerms = new Subject<ProductInOrder>();\n    sub: Subscription;\n\n    static validateCount(productInOrder) {\n        const max = productInOrder.productStock;\n        if (productInOrder.count > max) {\n            productInOrder.count = max;\n        } else if (productInOrder.count < 1) {\n            productInOrder.count = 1;\n        }\n        console.log(productInOrder.count);\n    }\n\n    ngOnInit() {\n        this.cartService.getCart().subscribe(prods => {\n            this.productInOrders = prods;\n        });\n\n        this.sub = this.updateTerms.pipe(\n            // wait 300ms after each keystroke before considering the term\n            debounceTime(300),\n            //\n            // ignore new term if same as previous term\n            // Same Object Reference, not working here\n            //  distinctUntilChanged((p: ProductInOrder, q: ProductInOrder) => p.count === q.count),\n            //\n            // switch to new search observable each time the term changes\n            switchMap((productInOrder: ProductInOrder) => this.cartService.update(productInOrder))\n        ).subscribe(prod => {\n                if (prod) { throw new Error(); }\n            },\n            _ => console.log('Update Item Failed'));\n    }\n\n    ngOnDestroy() {\n        if (!this.currentUser) {\n            this.cartService.storeLocalCart();\n        }\n        this.userSubscription.unsubscribe();\n    }\n\n    ngAfterContentChecked() {\n        this.total = this.productInOrders.reduce(\n            (prev, cur) => prev + cur.count * cur.productPrice, 0);\n    }\n\n    addOne(productInOrder) {\n        productInOrder.count++;\n        CartComponent.validateCount(productInOrder);\n        if (this.currentUser) { this.updateTerms.next(productInOrder); }\n    }\n\n    minusOne(productInOrder) {\n        productInOrder.count--;\n        CartComponent.validateCount(productInOrder);\n        if (this.currentUser) { this.updateTerms.next(productInOrder); }\n    }\n\n    onChange(productInOrder) {\n        CartComponent.validateCount(productInOrder);\n        if (this.currentUser) { this.updateTerms.next(productInOrder); }\n    }\n\n\n    remove(productInOrder: ProductInOrder) {\n        this.cartService.remove(productInOrder).subscribe(\n            success => {\n               this.productInOrders = this.productInOrders.filter(e => e.productId !== productInOrder.productId);\n                console.log('Cart: ' + this.productInOrders);\n            },\n            _ => console.log('Remove Cart Failed'));\n    }\n\n    checkout() {\n        if (!this.currentUser) {\n            this.router.navigate(['/login'], {queryParams: {returnUrl: this.router.url}});\n        } else if (this.currentUser.role !== Role.Customer) {\n            this.router.navigate(['/seller']);\n        } else {\n            this.cartService.checkout().subscribe(\n                _ => {\n                    this.productInOrders = [];\n                },\n                error1 => {\n                    console.log('Checkout Cart Failed');\n                });\n            this.router.navigate(['/']);\n        }\n\n    }\n}\n\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h1 align=\\\"center\\\" class=\\\"display-4 mb-5\\\">Sign In</h1>\\n<div style=\\\"width:40%; margin: 25px auto\\\">\\n\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"isInvalid\\\">\\n        Invalid username and password.\\n    </div>\\n    <div class=\\\"alert alert-info\\\" *ngIf=\\\"isLogout\\\">\\n        You have been logged out.\\n    </div>\\n\\n\\n    <form #form='ngForm' (ngSubmit)=\\\"onSubmit()\\\">\\n        <div class=\\\"form-group\\\">\\n            <label>Email address</label>\\n            <input type=\\\"text\\\" class=\\\"form-control form-control-lg\\\" id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Enter email\\\"\\n                   required autofocus [(ngModel)]=\\\"model.username\\\" #email=\\\"ngModel\\\" autocomplete=\\\"email\\\" >\\n            <div [hidden]=\\\"email.valid || email.pristine\\\" class=\\\"alert alert-danger\\\">\\n                Email is required\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <label>Password</label>\\n            <input type=\\\"password\\\" class=\\\"form-control form-control-lg\\\" id=\\\"password\\\" name=\\\"password\\\"  autocomplete=\\\"password\\\"\\n                   placeholder=\\\"Password\\\" required [(ngModel)]=\\\"model.password\\\" #password='ngModel'>\\n            <div [hidden]=\\\"password.valid || password.pristine\\\" class=\\\"alert alert-danger\\\">\\n                Email is required\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <div>\\n                <input type=\\\"checkbox\\\" id=\\\"remember_me\\\" name=\\\"remember-me\\\" [(ngModel)]=\\\"model.remembered\\\">\\n                <label for=\\\"remember_me\\\" class=\\\"inline\\\">Remember me</label>\\n                <a class=\\\"float-right\\\" routerLink=\\\"/register\\\">Sign Up</a>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n            <button [disabled]=\\\"!form.form.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-lg btn-primary btn-block\\\">Sign In</button>\\n        </div>\\n    </form>\\n\\n\\n    <strong>Sample Users</strong>\\n    <table style=\\\"width: 100%;\\\" id=\\\"sampleLoginTable\\\">\\n        <tr>\\n            <td><a\\n                    (click)=\\\"fillLoginFields('customer1@email.com','123')\\\"\\n                    href=\\\"javascript:void(0)\\\">customer1</a></td>\\n            <td><a\\n                    (click)=\\\"fillLoginFields('employee1@email.com','123')\\\"\\n                    href=\\\"javascript:void(0)\\\">employee1</a></td>\\n            <td><a\\n                    (click)=\\\"fillLoginFields('manager1@email.com','123')\\\"\\n                    href=\\\"javascript:void(0)\\\">manager1</a></td>\\n        </tr>\\n    </table>\\n\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {UserService} from \"../../services/user.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {Role} from \"../../enum/Role\";\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n    isInvalid: boolean;\n    isLogout: boolean;\n    submitted = false;\n    model: any = {\n        username: '',\n        password: '',\n        remembered: false\n    };\n\n    returnUrl = '/';\n\n    constructor(private userService: UserService,\n                private router: Router,\n                private route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        let params = this.route.snapshot.queryParamMap;\n        this.isLogout = params.has('logout');\n        this.returnUrl = params.get('returnUrl');\n    }\n\n    onSubmit() {\n        this.submitted = true;\n        this.userService.login(this.model).subscribe(\n            user => {\n                if (user) {\n                    if (user.role != Role.Customer) {\n\n                        this.returnUrl = '/seller';\n                    }\n\n                    this.router.navigateByUrl(this.returnUrl);\n                } else {\n                    this.isLogout = false;\n                    this.isInvalid = true;\n                }\n\n            }\n        );\n    }\n\n    fillLoginFields(u, p) {\n        this.model.username = u;\n        this.model.password = p;\n        this.onSubmit();\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL29yZGVyLWRldGFpbC9vcmRlci1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1 align=\\\"center\\\" class=\\\"display-4 mb-5\\\">Order Detail</h1>\\n<table class=\\\"table table-striped text-center\\\">\\n    <thead>\\n    <tr>\\n        <th scope=\\\"col\\\">Photo</th>\\n        <th scope=\\\"col\\\">Name</th>\\n        <th scope=\\\"col\\\">Description</th>\\n        <th scope=\\\"col\\\">Price</th>\\n        <th scope=\\\"col\\\">Quantity</th>\\n        <th scope=\\\"col\\\">Subtotal</th>\\n\\n    </tr>\\n    </thead>\\n    <tbody>\\n    <tr *ngFor=\\\"let item of (order$ | async)?.products\\\">\\n        <th class=\\\"align-middle\\\" scope=\\\"row\\\">\\n            <a routerLink=\\\"/seller/product/{{item.productId}}/edit\\\"><img height=\\\"100px\\\" src=\\\"{{item.productIcon}}\\\"\\n                                                                         alt=\\\"{{item.productName}}\\\"></a>\\n        </th>\\n        <td class=\\\"align-middle\\\"><a routerLink=\\\"/seller/product/{{item.productId}}/edit\\\">{{item.productName}}</a></td>\\n        <td class=\\\"align-middle\\\">{{item.productDescription}}</td>\\n        <td class=\\\"align-middle\\\">{{item.productPrice | currency}}</td>\\n        <td class=\\\"align-middle\\\">{{item.count}}</td>\\n        <td class=\\\"align-middle\\\">{{(item.productPrice * item.count | currency)}}</td>\\n    </tr>\\n    </tbody>\\n</table>\\n<h5 style=\\\"display: inline\\\" class=\\\"float-right\\\">Total: {{(order$ | async)?.orderAmount | currency}}</h5>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Observable} from \"rxjs\";\nimport {OrderService} from \"../../services/order.service\";\nimport {Order} from \"../../models/Order\";\nimport {ActivatedRoute} from \"@angular/router\";\n\n@Component({\n    selector: 'app-order-detail',\n    templateUrl: './order-detail.component.html',\n    styleUrls: ['./order-detail.component.css']\n})\nexport class OrderDetailComponent implements OnInit {\n\n    constructor(private orderService: OrderService,\n                private route: ActivatedRoute) {\n    }\n\n    order$: Observable<Order>;\n\n    ngOnInit() {\n        // this.items$ = this.route.paramMap.pipe(\n        //     map(paramMap =>paramMap.get('id')),\n        //     switchMap((id:string) => this.orderService.show(id))\n        // )\n        this.order$ = this.orderService.show(this.route.snapshot.paramMap.get('id'));\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL29yZGVyL29yZGVyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h1 align=\\\"center\\\" class=\\\"display-4 mb-5\\\">Orders</h1>\\n\\n<table class=\\\"table table-striped text-center\\\">\\n    <thead>\\n    <tr>\\n        <th scope=\\\"col\\\">Order #</th>\\n        <th scope=\\\"col\\\">Customer Name</th>\\n        <th scope=\\\"col\\\">Customer Email</th>\\n        <th scope=\\\"col\\\">Customer phone</th>\\n        <th scope=\\\"col\\\">Shipping Address</th>\\n        <th scope=\\\"col\\\">Total</th>\\n        <th scope=\\\"col\\\">Order Data</th>\\n        <th scope=\\\"col\\\">Status</th>\\n        <th scope=\\\"col\\\">Action</th>\\n    </tr>\\n    </thead>\\n    <tbody>\\n\\n    <tr *ngFor=\\\"let order of page?.content\\\">\\n        <th class=\\\"align-middle\\\" scope=\\\"row\\\">\\n            {{order.orderId}}\\n        </th>\\n        <td class=\\\"align-middle\\\">{{order.buyerName}}</td>\\n        <td class=\\\"align-middle\\\">{{order.buyerEmail}}</td>\\n        <td class=\\\"align-middle\\\">{{order.buyerPhone}}</td>\\n        <td class=\\\"align-middle\\\">{{order.buyerAddress}}</td>\\n        <td class=\\\"align-middle\\\">{{order.orderAmount | currency}}</td>\\n        <td class=\\\"align-middle\\\">{{order.createTime | date}}</td>\\n        <td class=\\\"align-middle\\\">{{OrderStatus[order.orderStatus]}}</td>\\n        <td class=\\\"align-middle\\\">\\n            <a *ngIf=\\\"!(currentUser.role == Role.Customer && currentUser.name == order.buyerEmail)\\\"\\n               style=\\\"display:\\n            block\\\" href=\\\"\\\" routerLink=\\\"/order/{{order.orderId}}\\\">\\n                Show</a>\\n            <a *ngIf=\\\"order.orderStatus == 0\\\" style=\\\"display: block\\\" (click)=\\\"cancel(order)\\\" routerLink=\\\"./\\\">Cancel</a>\\n            <a *ngIf=\\\"currentUser.role != Role.Customer && order.orderStatus == 0\\\"\\n               style=\\\"display: block\\\"\\n               (click)=\\\"finish(order)\\\"\\n               routerLink=\\\"./\\\">\\n                Finish</a>\\n        </td>\\n    </tr>\\n    </tbody>\\n</table>\\n\\n<app-pagination [currentPage]=\\\"page\\\"></app-pagination>\\n\"","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {OrderService} from \"../../services/order.service\";\nimport {Order} from \"../../models/Order\";\nimport {OrderStatus} from \"../../enum/OrderStatus\";\nimport {UserService} from \"../../services/user.service\";\nimport {JwtResponse} from \"../../response/JwtResponse\";\nimport {Subscription} from \"rxjs\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {Role} from \"../../enum/Role\";\n\n@Component({\n    selector: 'app-order',\n    templateUrl: './order.component.html',\n    styleUrls: ['./order.component.css']\n})\nexport class OrderComponent implements OnInit, OnDestroy {\n\n    page: any;\n    OrderStatus = OrderStatus;\n    currentUser: JwtResponse;\n    Role = Role;\n    constructor(private httpClient: HttpClient,\n                private orderService: OrderService,\n                private userService: UserService,\n                private route: ActivatedRoute\n    ) {\n    }\n\n    querySub: Subscription;\n\n    ngOnInit() {\n        this.currentUser = this.userService.currentUserValue;\n        this.querySub = this.route.queryParams.subscribe(() => {\n            this.update();\n        });\n\n    }\n\n    update() {\n        let nextPage = 1;\n        let size = 10;\n        if (this.route.snapshot.queryParamMap.get('page')) {\n            nextPage = +this.route.snapshot.queryParamMap.get('page');\n            size = +this.route.snapshot.queryParamMap.get('size');\n        }\n        this.orderService.getPage(nextPage, size).subscribe(page => this.page = page, _ => {\n            console.log(\"Get Orde Failed\")\n        });\n    }\n\n\n    cancel(order: Order) {\n        this.orderService.cancel(order.orderId).subscribe(res => {\n            if (res) {\n                order.orderStatus = res.orderStatus;\n            }\n        });\n    }\n\n    finish(order: Order) {\n        this.orderService.finish(order.orderId).subscribe(res => {\n            if (res) {\n                order.orderStatus = res.orderStatus;\n            }\n        })\n    }\n\n    ngOnDestroy(): void {\n        this.querySub.unsubscribe();\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2R1Y3QtZGV0YWlsL2RldGFpbC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1 align=\\\"center\\\" class=\\\"display-4 mb-5\\\">{{title}}</h1>\\n<div class=\\\"row text-center justify-content-center\\\">\\n  <div class=\\\"col-lg-6 \\\">\\n    <div class=\\\"card mb-4 \\\">\\n      <img height=\\\"60%\\\" class=\\\"card-img-top\\\" src=\\\"{{productInfo?.productIcon}}\\\">\\n      <div class=\\\"card-body\\\">\\n        <h4 class=\\\"card-title \\\">{{productInfo?.productName}}</h4>\\n        <form name=\\\"form\\\" #form='ngForm' (ngSubmit)=\\\"productInfo?.productStatus == 0 && addToCart()\\\">\\n          <div class=\\\"text-left\\\">\\n            <input hidden name=\\\"productId\\\" [value]=productInfo?.productId>\\n            <p class=\\\"card-test\\\"><strong>Description: </strong>{{productInfo?.productDescription}}</p>\\n            <p class=\\\"card-text\\\">\\n              <strong>Price: </strong>\\n              <label id=\\\"price\\\">{{productInfo?.productPrice | currency}}</label>\\n            </p>\\n            <p class=\\\"card-text\\\"><strong>Stock: </strong>{{productInfo?.productStock}}</p>\\n\\n            <label class=\\\"card-text\\\">\\n              <strong>Quantity: </strong>\\n              <input [(ngModel)]=count\\n                     (change)=\\\"validateCount()\\\"\\n                     type=\\\"number\\\"\\n                     name=\\\"count\\\"\\n                     required\\n                     min=\\\"1\\\"\\n                     [max]=productInfo?.productStock\\n              >\\n            </label>\\n\\n\\n            <p class=\\\"card-text\\\"><strong>Subtotal: </strong>\\n              <label id=\\\"subtotal\\\">{{count * productInfo?.productPrice | currency}}</label>\\n            </p>\\n          </div>\\n          <button type=\\\"submit\\\" [disabled]=\\\"!form.form.valid\\\" *ngIf=\\\"productInfo?.productStatus == 0; else offBlock\\\"\\n                  class=\\\"btn btn-primary btn-lg\\\"\\n          >Add to Cart\\n          </button>\\n          <ng-template #offBlock><a class=\\\"btn btn-secondary btn-lg disabled\\\">Unavailable</a></ng-template>\\n        </form>\\n\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ProductService} from '../../services/product.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {CartService} from '../../services/cart.service';\nimport {CookieService} from 'ngx-cookie-service';\nimport {ProductInOrder} from '../../models/ProductInOrder';\nimport {ProductInfo} from '../../models/productInfo';\n\n@Component({\n  selector: 'app-detail',\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.css']\n})\nexport class DetailComponent implements OnInit {\n  title: string;\n  count: number;\n  productInfo: ProductInfo;\n\n  constructor(\n      private productService: ProductService,\n      private cartService: CartService,\n      private cookieService: CookieService,\n      private route: ActivatedRoute,\n      private router: Router\n  ) {\n  }\n\n  ngOnInit() {\n    this.getProduct();\n    this.title = 'Product Detail';\n    this.count = 1;\n  }\n\n  // ngOnChanges(changes: SimpleChanges): void {\n  //   // Called before any other lifecycle hook. Use it to inject dependencies, but avoid any serious work here.\n  //   // Add '${implements OnChanges}' to the class.\n  //   console.log(changes);\n  //   if (this.item.quantity in changes) {\n\n  //   }\n  // }\n\n  getProduct(): void {\n    const id = this.route.snapshot.paramMap.get('id');\n    this.productService.getDetail(id).subscribe(\n        prod => {\n          this.productInfo = prod;\n        },\n        _ => console.log('Get Cart Failed')\n    );\n  }\n\n  addToCart() {\n    this.cartService\n        .addItem(new ProductInOrder(this.productInfo, this.count))\n        .subscribe(\n            res => {\n              if (!res) {\n                console.log('Add Cart failed' + res);\n                throw new Error();\n              }\n              this.router.navigateByUrl('/cart');\n            },\n            _ => console.log('Add Cart Failed')\n        );\n  }\n\n  validateCount() {\n    console.log('Validate');\n    const max = this.productInfo.productStock;\n    if (this.count > max) {\n      this.count = max;\n    } else if (this.count < 1) {\n      this.count = 1;\n    }\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2R1Y3QtZWRpdC9wcm9kdWN0LWVkaXQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1 align=\\\"center\\\" class=\\\"display-4 mb-5\\\">Edit Product</h1>\\n<div style=\\\"width:40%; margin: 25px auto\\\">\\n    <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n        <!--Id-->\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"productId\\\">Code</label>\\n            <input [readOnly]=\\\"isEdit\\\" [disabled]=\\\"isEdit\\\" [(ngModel)]=\\\"product.productId\\\" type=\\\"text\\\"\\n                   class=\\\"form-control form-control-lg\\\" #productIdInput\\n                   id=\\\"productId\\\" name=\\\"productId\\\" required #productId=\\\"ngModel\\\">\\n            <div *ngIf=\\\"productIdInput.invalid && (productIdInput.dirty ||productIdInput.touched)\\\">\\n                <div *ngIf=\\\"productIdInput.errors.required\\\">\\n                    Name is required.\\n                </div>\\n            </div>\\n        </div>\\n        <!--Photo-->\\n        <div class=\\\"form-group\\\">\\n            <label>Photo Link</label>\\n            <input [(ngModel)]=\\\"product.productIcon\\\" type=\\\"text\\\" class=\\\"form-control form-control-lg\\\" id=\\\"productIcon\\\"\\n                   name=\\\"productIcon\\\" placeholder=\\\"Photo\\\">\\n        </div>\\n\\n        <!--Name-->\\n        <div class=\\\"form-group\\\">\\n            <label>Name</label>\\n            <input [(ngModel)]=\\\"product.productName\\\" type=\\\"text\\\" class=\\\"form-control form-control-lg\\\" id=\\\"productName\\\"\\n                   #productName=\\\"ngModel\\\"\\n                   name=\\\"productName\\\" placeholder=\\\"Name\\\" required>\\n        </div>\\n        <div *ngIf=\\\"productName.invalid && (productName.dirty ||productName.touched)\\\">\\n            <div *ngIf=\\\"productName.errors.required\\\">\\n                Name is required.\\n            </div>\\n        </div>\\n\\n        <!--Category-->\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"categoryType\\\">Category</label>\\n            <select class=\\\"custom-select custom-select-lg \\\" id=\\\"categoryType\\\" name=\\\"categoryType\\\"\\n                    [(ngModel)]=\\\"product.categoryType\\\"\\n                    required>\\n                <option [ngValue]=0>Books</option>\\n                <option [ngValue]=1>Food</option>\\n                <option [ngValue]=2>Clothes</option>\\n                <option [ngValue]=3>Drink</option>\\n            </select>\\n        </div>\\n\\n        <!--Description-->\\n        <div class=\\\"form-group\\\">\\n            <label>Description</label>\\n            <textarea class=\\\"form-control form-control-lg text-left\\\"\\n                      id=\\\"productDescription\\\" name=\\\"productDescription\\\"\\n                      placeholder=\\\"Description\\\" [(ngModel)]=\\\"product.productDescription\\\"></textarea>\\n        </div>\\n        <!--Price-->\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"productPrice\\\">Price</label>\\n            <input class=\\\"form-control form-control-lg\\\"\\n                   type=\\\"number\\\"\\n                   id=\\\"productPrice\\\"\\n                   name=\\\"productPrice\\\"\\n                   #productPrice=\\\"ngModel\\\"\\n                   [ngModel]=\\\"product.productPrice\\\" (ngModelChange)=\\\"product.productPrice=$event\\\"\\n                   required>\\n            <div *ngIf=\\\"productPrice.invalid && (productPrice.dirty ||productPrice.touched)\\\">\\n                <div *ngIf=\\\"productPrice.errors.required\\\">\\n                    Price is required.\\n                </div>\\n            </div>\\n        </div>\\n        <!--Stock-->\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"productStock\\\">Stock</label>\\n            <input class=\\\"form-control form-control-lg\\\"\\n                   type=\\\"number\\\"\\n                   id=\\\"productStock\\\"\\n                   name=\\\"productStock\\\"\\n                   min=\\\"0\\\" #productStock=\\\"ngModel\\\"\\n                   [(ngModel)]=\\\"product.productStock\\\"\\n                   required>\\n            <div *ngIf=\\\"productStock.invalid && (productStock.dirty ||productStock.touched)\\\">\\n                <div *ngIf=\\\"productStock.errors.required\\\">\\n                    Stock is required.\\n                </div>\\n            </div>\\n        </div>\\n        <!--Status-->\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"productStatus\\\">Status</label>\\n            <select class=\\\"custom-select custom-select-lg \\\" id=\\\"productStatus\\\" name=\\\"productStatus\\\" required\\n                    [(ngModel)]=\\\"product.productStatus\\\">\\n                <option [ngValue]=0>Available</option>\\n                <option [ngValue]=1>Unavailable</option>\\n            </select>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n            <button type=\\\"submit\\\" [disabled]=\\\"!form.form.valid\\\" class=\\\"btn btn-lg btn-primary btn-block\\\">Submit</button>\\n        </div>\\n    </form>\\n\\n\\n</div>\\n\"","import {AfterContentChecked, Component, OnInit} from '@angular/core';\nimport {ProductInfo} from \"../../models/productInfo\";\nimport {ProductService} from \"../../services/product.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\n\n@Component({\n    selector: 'app-product-edit',\n    templateUrl: './product-edit.component.html',\n    styleUrls: ['./product-edit.component.css']\n})\nexport class ProductEditComponent implements OnInit, AfterContentChecked {\n\n    product = new ProductInfo();\n\n    constructor(private productService: ProductService,\n                private route: ActivatedRoute,\n                private router: Router) {\n    }\n\n    productId: string;\n    isEdit = false;\n\n    ngOnInit() {\n        this.productId = this.route.snapshot.paramMap.get('id');\n        if (this.productId) {\n            this.isEdit = true;\n            this.productService.getDetail(this.productId).subscribe(prod => this.product = prod);\n        }\n\n    }\n\n    update() {\n        this.productService.update(this.product).subscribe(prod => {\n                if (!prod) throw new Error();\n                this.router.navigate(['/seller']);\n            },\n            err => {\n            });\n\n    }\n\n    onSubmit() {\n        if (this.productId) {\n            this.update();\n        } else {\n            this.add();\n        }\n    }\n\n    add() {\n        this.productService.create(this.product).subscribe(prod => {\n                if (!prod) throw new Error;\n                this.router.navigate(['/']);\n            },\n            e => {\n            });\n    }\n\n    ngAfterContentChecked(): void {\n        console.log(this.product);\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2R1Y3QtbGlzdC9wcm9kdWN0Lmxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1 align=\\\"center\\\" class=\\\"display-4 \\\">Products</h1>\\n<a *ngIf=\\\"currentUser?.role == Role.Customer\\\" style=\\\"color: inherit\\\"\\n   routerLink=\\\"/seller/product/new\\\" class=\\\"float-right mb-3\\\"><i class=\\\"fas fa-plus fa-2x\\\">Add</i>\\n</a>\\n<table id=\\\"table\\\" class=\\\"table table-striped text-center\\\" style=\\\"width:100%;\\\">\\n    <thead>\\n    <tr>\\n        <th scope=\\\"col\\\">Photo</th>\\n        <th scope=\\\"col\\\">Code</th>\\n        <th scope=\\\"col\\\">Name</th>\\n        <th scope=\\\"col\\\">Type</th>\\n        <th scope=\\\"col\\\">Description</th>\\n        <th scope=\\\"col\\\">Price</th>\\n        <th scope=\\\"col\\\">Stock</th>\\n        <th scope=\\\"col\\\">Status</th>\\n        <th scope=\\\"col\\\">Action</th>\\n    </tr>\\n    </thead>\\n    <tbody>\\n    <tr *ngFor=\\\"let productInfo of page?.content\\\">\\n        <th class=\\\"align-middle\\\" scope=\\\"row\\\">\\n            <img height=\\\"100px\\\" src=\\\"{{productInfo.productIcon}}\\\" alt=\\\"{{productInfo.productName}}\\\">\\n        </th>\\n        <td class=\\\"align-middle\\\">{{productInfo.productId}}</td>\\n        <td class=\\\"align-middle\\\">{{productInfo.productName}}</td>\\n        <td class=\\\"align-middle\\\">{{CategoryType[productInfo.categoryType]}}</td>\\n        <td class=\\\"align-middle\\\">{{productInfo.productDescription}}</td>\\n        <td class=\\\"align-middle\\\">{{productInfo.productPrice | currency}}</td>\\n        <td class=\\\"align-middle\\\">{{productInfo.productStock}}</td>\\n        <td class=\\\"align-middle\\\">{{ProductStatus[productInfo.productStatus]}}</td>\\n        <td class=\\\"align-middle\\\">\\n            <a style=\\\"display: block\\\" routerLink=\\\"/seller/product/{{productInfo.productId}}/edit\\\">\\n                Edit</a>\\n\\n            <a *ngIf=\\\"currentUser?.role == Role.Customer\\\" style=\\\"display: block\\\"\\n               (click)=\\\"remove(page.content, productInfo.productId)\\\" routerLink=\\\"./\\\">\\n                Remove</a>\\n        </td>\\n\\n    </tbody>\\n</table>\\n<app-pagination [currentPage]=\\\"page\\\"></app-pagination>\\n\"","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {UserService} from \"../../services/user.service\";\nimport {ProductService} from \"../../services/product.service\";\nimport {JwtResponse} from \"../../response/JwtResponse\";\nimport {Subscription} from \"rxjs\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {CategoryType} from \"../../enum/CategoryType\";\nimport {ProductStatus} from \"../../enum/ProductStatus\";\nimport {ProductInfo} from \"../../models/productInfo\";\nimport {Role} from \"../../enum/Role\";\n\n@Component({\n    selector: 'app-product.list',\n    templateUrl: './product.list.component.html',\n    styleUrls: ['./product.list.component.css']\n})\nexport class ProductListComponent implements OnInit, OnDestroy {\n\n    constructor(private userService: UserService,\n                private productService: ProductService,\n                private route: ActivatedRoute) {\n    }\n\n    Role = Role;\n    currentUser: JwtResponse;\n    page: any;\n    CategoryType = CategoryType;\n    ProductStatus = ProductStatus;\n    private querySub: Subscription;\n\n    ngOnInit() {\n        this.querySub = this.route.queryParams.subscribe(() => {\n            this.update();\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.querySub.unsubscribe();\n    }\n\n    update() {\n        if (this.route.snapshot.queryParamMap.get('page')) {\n            const currentPage = +this.route.snapshot.queryParamMap.get('page');\n            const size = +this.route.snapshot.queryParamMap.get('size');\n            this.getProds(currentPage, size);\n        } else {\n            this.getProds();\n        }\n    }\n\n    getProds(page: number = 1, size: number = 5) {\n        this.productService.getAllInPage(+page, +size)\n            .subscribe(page => {\n                this.page = page;\n            });\n\n    }\n\n\n    remove(productInfos: ProductInfo[], productInfo) {\n        this.productService.delelte(productInfo).subscribe(_ => {\n                productInfos = productInfos.filter(e => e.productId != productInfo);\n            },\n            err => {\n            });\n    }\n\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3NpZ251cC9zaWdudXAuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1 align=\\\"center\\\" class=\\\"display-4 mb-5\\\">Sign Up</h1>\\n<div style=\\\"width:40%; margin: 25px auto\\\" >\\n  <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"form-group\\\">\\n      <label><b>Email address</b></label>\\n      <input [(ngModel)]=\\\"user.email\\\" type=\\\"email\\\" class=\\\"form-control form-control-lg\\\" id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Enter email\\\" email required autofocus  #email=\\\"ngModel\\\">\\n      <div  *ngIf=\\\"email.invalid && (email.dirty ||email.touched)\\\" >\\n          <div *ngIf=\\\"email.errors.required\\\" >\\n              Email is required.\\n          </div>\\n          <div *ngIf=\\\"email.errors.email\\\">\\n              Invalid Email.\\n          </div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label><b>Name</b></label>\\n      <input [(ngModel)]=\\\"user.name\\\" type=\\\"text\\\" class=\\\"form-control form-control-lg\\\" id=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"Your name\\\" required #name=\\\"ngModel\\\">\\n        <div  *ngIf=\\\"name.invalid && (name.dirty ||name.touched)\\\">\\n            <div *ngIf=\\\"name.errors.required\\\">\\n                Name is required.\\n            </div>\\n            <div *ngIf=\\\"name.errors.minlength\\\">\\n                Name must be at least 3 characters long.\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label><b>Password</b></label>\\n      <input  [(ngModel)]=\\\"user.password\\\" type=\\\"password\\\" class=\\\"form-control form-control-lg\\\" id=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" minlength=\\\"3\\\" required #password=\\\"ngModel\\\">\\n        <div  *ngIf=\\\"password.invalid && (password.dirty ||password.touched)\\\">\\n            <div *ngIf=\\\"password.errors.required\\\">\\n                Password is required.\\n            </div>\\n            <div *ngIf=\\\"password.errors.minlength\\\">\\n                Password must be at least 3 characters long.\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label><b>Phone</b></label>\\n      <input [(ngModel)]=\\\"user.phone\\\" type=\\\"text\\\" class=\\\"form-control form-control-lg\\\" id=\\\"phone\\\" name=\\\"phone\\\" placeholder=\\\"Phone\\\" required #phone=\\\"ngModel\\\" >\\n        <div  *ngIf=\\\"phone.invalid && (phone.dirty ||phone.touched)\\\">\\n            <div *ngIf=\\\"phone.errors.required\\\">\\n                Phone is required.\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label><b>Address</b></label>\\n      <input [(ngModel)]=\\\"user.address\\\" type=\\\"text\\\" class=\\\"form-control form-control-lg\\\" id=\\\"address\\\" name=\\\"address\\\" placeholder=\\\"Address\\\" required #address=\\\"ngModel\\\">\\n        <div  *ngIf=\\\"address.invalid && (address.dirty ||address.touched)\\\">\\n            <div *ngIf=\\\"address.errors.required\\\">\\n                Address is required.\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-primary btn-block\\\" [disabled]=\\\"!form.form.valid\\\" >Sign Up</button>\\n    </div>\\n  </form>\\n</div>\\n\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Location} from '@angular/common';\nimport {User} from \"../../models/User\";\nimport {UserService} from \"../../services/user.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  user: User;\n\n  constructor( private location: Location,\n               private userService: UserService,\n               private router: Router) {\n    this.user = new User();\n\n  }\n\n\n\n  ngOnInit() {\n\n\n  }\n  onSubmit() {\n    this.userService.signUp(this.user).subscribe(u => {\n      this.router.navigate(['/login']);\n    },\n        e => {});\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3VzZXItZWRpdC91c2VyLWRldGFpbC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1 align=\\\"center\\\" class=\\\"display-4 mb-5\\\">Edit Profiles</h1>\\n<div style=\\\"width:40%; margin: 25px auto\\\" >\\n  <form #form=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"form-group\\\">\\n      <label><b>Email address</b></label>\\n        <input readonly [value]=user?.email type=\\\"email\\\" class=\\\"form-control form-control-lg \\\" disabled id=\\\"email\\\"\\n               name=\\\"email\\\" placeholder=\\\"Enter email\\\">\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label><b>Name</b></label>\\n      <input [(ngModel)]=\\\"user.name\\\" type=\\\"text\\\" class=\\\"form-control form-control-lg\\\" id=\\\"name\\\" name=\\\"name\\\" placeholder=\\\"Your name\\\" required #name=\\\"ngModel\\\" autofocus>\\n      <div  *ngIf=\\\"name.invalid && (name.dirty || name.touched)\\\">\\n        <div *ngIf=\\\"name.errors.required\\\">\\n          Name is required.\\n        </div>\\n        <div *ngIf=\\\"name.errors.minlength\\\">\\n          Name must be at least 3 characters long.\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label><b>Password</b></label>\\n      <input  [(ngModel)]=\\\"user.password\\\" type=\\\"password\\\" class=\\\"form-control form-control-lg\\\" id=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" minlength=\\\"3\\\" required #password=\\\"ngModel\\\">\\n      <div  *ngIf=\\\"password.invalid && (password.dirty ||password.touched)\\\">\\n        <div *ngIf=\\\"password.errors.required\\\">\\n          Password is required.\\n        </div>\\n        <div *ngIf=\\\"password.errors.minlength\\\">\\n          Password must be at least 3 characters long.\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label><b>Phone</b></label>\\n      <input [(ngModel)]=\\\"user.phone\\\" type=\\\"text\\\" class=\\\"form-control form-control-lg\\\" id=\\\"phone\\\" name=\\\"phone\\\" placeholder=\\\"Phone\\\" required #phone=\\\"ngModel\\\" >\\n      <div  *ngIf=\\\"phone.invalid && (phone.dirty ||phone.touched)\\\">\\n        <div *ngIf=\\\"phone.errors.required\\\">\\n          Phone is required.\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label><b>Address</b></label>\\n      <input [(ngModel)]=\\\"user.address\\\" type=\\\"text\\\" class=\\\"form-control form-control-lg\\\" id=\\\"address\\\" name=\\\"address\\\" placeholder=\\\"Address\\\" required #address=\\\"ngModel\\\">\\n      <div  *ngIf=\\\"address.invalid && (address.dirty ||address.touched)\\\">\\n        <div *ngIf=\\\"address.errors.required\\\">\\n          Address is required.\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-primary btn-block\\\" [disabled]=\\\"!form.form.valid\\\" >Update</button>\\n    </div>\\n  </form>\\n</div>\\n\\n\"","import {Component, OnInit} from '@angular/core';\nimport {UserService} from \"../../services/user.service\";\nimport {User} from \"../../models/User\";\nimport {Router} from \"@angular/router\";\nimport {Observable, Subject} from \"rxjs\";\nimport {Role} from \"../../enum/Role\";\n\n@Component({\n    selector: 'app-user-detail',\n    templateUrl: './user-detail.component.html',\n    styleUrls: ['./user-detail.component.css']\n})\nexport class UserDetailComponent implements OnInit {\n\n\n\n\n    constructor(private userService: UserService,\n                private router: Router) {\n    }\n\n    user= new User();\n\n\n    ngOnInit() {\n        const account = this.userService.currentUserValue.account;\n\n        this.userService.get(account).subscribe( u => {\n            this.user = u;\n            this.user.password = '';\n        }, e => {\n\n        });\n    }\n\n    onSubmit() {\n        this.userService.update(this.user).subscribe(u => {\n            this.userService.nameTerms.next(u.name);\n            let url = '/';\n            if (this.user.role != Role.Customer) {\n                url = '/seller';\n            }\n            this.router.navigateByUrl(url);\n        }, _ => {})\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhcnRzL25hdmlnYXRpb24vbmF2aWdhdGlvbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n    <a class=\\\"navbar-brand\\\" [routerLink]=\\\"root\\\">\\n        <img src=\\\"/assets/brand.png\\\" width=\\\"30\\\" height=\\\"30\\\" class=\\\"d-inline-block align-top\\\" alt=\\\"\\\">\\n        E-Shop\\n    </a>\\n\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\"\\n            aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n\\n        <div class=\\\"navbar-nav\\\" *ngIf=\\\"!currentUser || currentUser.role == Role.Customer\\\">\\n\\n            <a class=\\\"nav-item nav-link \\\"\\n               routerLink=\\\"/category/0\\\">\\n                Books\\n            </a>\\n            <a class=\\\"nav-item nav-link\\\"\\n               routerLink=\\\"/category/1\\\">\\n                Food\\n            </a>\\n            <a class=\\\"nav-item nav-link \\\"\\n               routerLink=\\\"/category/2\\\">\\n                Clothes\\n            </a>\\n            <a class=\\\"nav-item nav-link\\\"\\n               routerLink=\\\"/category/3\\\">\\n                Drink\\n            </a>\\n\\n        </div>\\n\\n        <div class=\\\"navbar-nav ml-auto\\\">\\n            <a *ngIf=\\\"!currentUser || currentUser.role == Role.Customer\\\"\\n                    class=\\\"nav-item nav-link \\\" routerLink=\\\"/cart\\\">\\n                <i class=\\\"fas fa-shopping-cart\\\"></i>\\n                Cart\\n            </a>\\n\\n            <ng-container *ngIf=\\\"currentUser; else noUser\\\">\\n                <a class=\\\"nav-item nav-link \\\" routerLink=\\\"/order\\\">\\n                    <i class=\\\"fas fa-list-ul\\\"></i>\\n                    Orders\\n                </a>\\n                <a class=\\\"nav-item nav-link \\\" routerLink=\\\"/profile\\\">\\n                    {{name}}\\n                </a>\\n                <a class=\\\"nav-item nav-link \\\" (click)=\\\"logout()\\\" routerLink=\\\"/login\\\" [queryParams]=\\\"{logout: true}\\\">\\n                    Sign Out\\n                </a>\\n            </ng-container>\\n            <ng-template #noUser>\\n                <a class=\\\"nav-item nav-link \\\" routerLink=\\\"/login\\\">\\n                    Sign In\\n                </a>\\n                <a class=\\\"nav-item nav-link \\\" routerLink=\\\"/register\\\">\\n                    Sign Up\\n                </a>\\n            </ng-template>\\n        </div>\\n    </div>\\n</nav>\\n\"","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {UserService} from \"../../services/user.service\";\nimport {Subscription} from \"rxjs\";\nimport {JwtResponse} from \"../../response/JwtResponse\";\nimport {Router} from \"@angular/router\";\nimport {Role} from \"../../enum/Role\";\n\n@Component({\n    selector: 'app-navigation',\n    templateUrl: './navigation.component.html',\n    styleUrls: ['./navigation.component.css']\n})\nexport class NavigationComponent implements OnInit, OnDestroy {\n\n\n    currentUserSubscription: Subscription;\n    name$;\n    name: string;\n    currentUser: JwtResponse;\n    root = '/';\n    Role = Role;\n\n    constructor(private userService: UserService,\n                private router: Router,\n    ) {\n\n    }\n\n\n    ngOnInit() {\n        this.name$ = this.userService.name$.subscribe(aName => this.name = aName);\n        this.currentUserSubscription = this.userService.currentUser.subscribe(user => {\n            this.currentUser = user;\n            if (!user || user.role == Role.Customer) {\n                this.root = '/';\n            } else {\n                this.root = '/seller';\n            }\n        });\n    }\n\n    ngOnDestroy(): void {\n        this.currentUserSubscription.unsubscribe();\n        // this.name$.unsubscribe();\n    }\n\n    logout() {\n        this.userService.logout();\n        // this.router.navigate(['/login'], {queryParams: {logout: 'true'}} );\n    }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhcnRzL3BhZ2luYXRpb24vcGFnaW5hdGlvbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"col-md-12 column\\\">\\n  <ul class=\\\"pagination justify-content-end\\\">\\n      <li class=\\\"page-item\\\" *ngIf=\\\"currentPage?.number > 0; else prev\\\">\\n          <a\\n                  class=\\\"page-link\\\"\\n                  [routerLink]=\\\"['./']\\\"\\n                  [queryParams]=\\\"{ page: currentPage?.number, size: currentPage?.size }\\\"\\n          >Previous</a\\n          >\\n    </li>\\n      <ng-template #prev>\\n          <li class=\\\"page-item  disabled\\\"><a class=\\\"page-link\\\">Previous</a></li>\\n      </ng-template>\\n\\n      <ng-container *ngFor=\\\"let item of counter(currentPage?.totalPages); let i = index\\\">\\n          <li class=\\\"page-item\\\" *ngIf=\\\"currentPage && currentPage.number != i; else active\\\">\\n            <a class=\\\"page-link \\\"\\n                    routerLink=\\\"./\\\"\\n                    [queryParams]=\\\"{ page: i + 1, size: currentPage?.size }\\\"\\n            >{{ i + 1 }}</a\\n            >\\n        </li>\\n          <ng-template #active>\\n              <li\\n                      class=\\\"page-item active \\\"\\n\\n              >\\n                  <button class=\\\"page-link \\\" disabled>{{ i + 1 }}</button>\\n              </li>\\n          </ng-template>\\n      </ng-container>\\n\\n      <li\\n              class=\\\"page-item\\\"\\n              *ngIf=\\\"currentPage?.number + 1 < currentPage?.totalPages; else next\\\"\\n      >\\n          <a\\n                  class=\\\"page-link\\\"\\n                  [routerLink]=\\\"['./']\\\"\\n                  [queryParams]=\\\"{\\n          page: currentPage?.number + 2,\\n          size: currentPage?.size\\n        }\\\"\\n          >Next</a\\n          >\\n    </li>\\n    <ng-template #next>\\n        <li class=\\\"page-item disabled \\\"><a class=\\\"page-link\\\">Next</a></li>\\n    </ng-template>\\n  </ul>\\n</div>\\n\"","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.css']\n})\nexport class PaginationComponent implements OnInit {\n\n  @Input() currentPage: any;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  counter(i = 1) {\n    return new Array(i);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\nimport {apiUrl} from '../../environments/environment';\nimport {CookieService} from 'ngx-cookie-service';\nimport {BehaviorSubject, Observable, of} from 'rxjs';\nimport {catchError, map, tap} from 'rxjs/operators';\nimport {UserService} from './user.service';\nimport {Cart} from '../models/Cart';\nimport {Item} from '../models/Item';\nimport {JwtResponse} from '../response/JwtResponse';\nimport {ProductInOrder} from '../models/ProductInOrder';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CartService {\n\n\n    private cartUrl = `${apiUrl}/cart`;\n\n    localMap = {};\n\n\n    private itemsSubject: BehaviorSubject<Item[]>;\n    private totalSubject: BehaviorSubject<number>;\n    public items: Observable<Item[]>;\n    public total: Observable<number>;\n\n\n    private currentUser: JwtResponse;\n\n    constructor(private http: HttpClient,\n                private cookieService: CookieService,\n                private userService: UserService) {\n        this.itemsSubject = new BehaviorSubject<Item[]>(null);\n        this.items = this.itemsSubject.asObservable();\n        this.totalSubject = new BehaviorSubject<number>(null);\n        this.total = this.totalSubject.asObservable();\n        this.userService.currentUser.subscribe(user => this.currentUser = user);\n\n\n    }\n\n    private getLocalCart(): ProductInOrder[] {\n        if (this.cookieService.check('cart')) {\n            this.localMap = JSON.parse(this.cookieService.get('cart'));\n            return Object.values(this.localMap);\n        } else {\n            this.localMap = {};\n            return [];\n        }\n    }\n\n    getCart(): Observable<ProductInOrder[]> {\n        const localCart = this.getLocalCart();\n        if (this.currentUser) {\n            if (localCart.length > 0) {\n                return this.http.post<Cart>(this.cartUrl, localCart).pipe(\n                    tap(_ => {\n                        this.clearLocalCart();\n                    }),\n                    map(cart => cart.products),\n                    catchError(_ => of([]))\n                );\n            } else {\n                return this.http.get<Cart>(this.cartUrl).pipe(\n                    map(cart => cart.products),\n                    catchError(_ => of([]))\n                );\n            }\n        } else {\n            return of(localCart);\n        }\n    }\n\n    addItem(productInOrder): Observable<boolean> {\n        if (!this.currentUser) {\n            if (this.cookieService.check('cart')) {\n                this.localMap = JSON.parse(this.cookieService.get('cart'));\n            }\n            if (!this.localMap[productInOrder.productId]) {\n                this.localMap[productInOrder.productId] = productInOrder;\n            } else {\n                this.localMap[productInOrder.productId].count += productInOrder.count;\n            }\n            this.cookieService.set('cart', JSON.stringify(this.localMap));\n            return of(true);\n        } else {\n            const url = `${this.cartUrl}/add`;\n            return this.http.post<boolean>(url, {\n                'quantity': productInOrder.count,\n                'productId': productInOrder.productId\n            });\n        }\n    }\n\n    update(productInOrder): Observable<ProductInOrder> {\n\n        if (this.currentUser) {\n            const url = `${this.cartUrl}/${productInOrder.productId}`;\n            return this.http.put<ProductInOrder>(url, productInOrder.count);\n        }\n    }\n\n\n    remove(productInOrder) {\n        if (!this.currentUser) {\n            delete this.localMap[productInOrder.productId];\n            return of(null);\n        } else {\n            const url = `${this.cartUrl}/${productInOrder.productId}`;\n            return this.http.delete(url).pipe( );\n        }\n    }\n\n\n    checkout(): Observable<any> {\n        const url = `${this.cartUrl}/checkout`;\n        return this.http.post(url, null).pipe();\n    }\n\n    storeLocalCart() {\n        this.cookieService.set('cart', JSON.stringify(this.localMap));\n    }\n\n    clearLocalCart() {\n        console.log('clear local cart');\n        this.cookieService.delete('cart');\n        this.localMap = {};\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {catchError} from \"rxjs/operators\";\nimport {Observable, of} from \"rxjs\";\nimport {Order} from \"../models/Order\";\nimport {apiUrl} from \"../../environments/environment\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class OrderService {\n\n    private orderUrl = `${apiUrl}/order`;\n\n    constructor(private http: HttpClient) {\n    }\n\n    getPage(page = 1, size = 10): Observable<any> {\n        return this.http.get(`${this.orderUrl}?page=${page}&size=${size}`).pipe();\n    }\n\n    show(id): Observable<Order> {\n        return this.http.get<Order>(`${this.orderUrl}/${id}`).pipe(\n            catchError(_ => of(null))\n        );\n    }\n\n    cancel(id): Observable<Order> {\n        return this.http.patch<Order>(`${this.orderUrl}/cancel/${id}`, null).pipe(\n            catchError(_ => of(null))\n        );\n    }\n\n    finish(id): Observable<Order> {\n        return this.http.patch<Order>(`${this.orderUrl}/finish/${id}`, null).pipe(\n            catchError(_ => of(null))\n        );\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable, of} from 'rxjs';\nimport {catchError} from 'rxjs/operators';\nimport {ProductInfo} from '../models/productInfo';\nimport {apiUrl} from '../../environments/environment';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ProductService {\n\n    private productUrl = `${apiUrl}/product`;\n    private categoryUrl = `${apiUrl}/category`;\n\n    constructor(private http: HttpClient) {\n    }\n\n    getAllInPage(page: number, size: number): Observable<any> {\n        const url = `${this.productUrl}?page=${page}&size=${size}`;\n        return this.http.get(url)\n            .pipe(\n                // tap(_ => console.log(_)),\n            )\n    }\n\n    getCategoryInPage(categoryType: number, page: number, size: number): Observable<any> {\n        const url = `${this.categoryUrl}/${categoryType}?page=${page}&size=${size}`;\n        return this.http.get(url).pipe(\n            // tap(data => console.log(data))\n        );\n    }\n\n    getDetail(id: String): Observable<ProductInfo> {\n        const url = `${this.productUrl}/${id}`;\n        return this.http.get<ProductInfo>(url).pipe(\n            catchError(_ => {\n                console.log(\"Get Detail Failed\");\n                return of(new ProductInfo());\n            })\n        );\n    }\n\n    update(productInfo: ProductInfo): Observable<ProductInfo> {\n        const url = `${apiUrl}/seller/product/${productInfo.productId}/edit`;\n        return this.http.put<ProductInfo>(url, productInfo);\n    }\n\n    create(productInfo: ProductInfo): Observable<ProductInfo> {\n        const url = `${apiUrl}/seller/product/new`;\n        return this.http.post<ProductInfo>(url, productInfo);\n    }\n\n\n    delelte(productInfo: ProductInfo): Observable<any> {\n        const url = `${apiUrl}/seller/product/${productInfo.productId}/delete`;\n        return this.http.delete(url);\n    }\n\n\n    /**\n     * Handle Http operation that failed.\n     * Let the app continue.\n     * @param operation - name of the operation that failed\n     * @param result - optional value to return as the observable result\n     */\n    private handleError<T>(operation = 'operation', result?: T) {\n        return (error: any): Observable<T> => {\n\n            console.error(error); // log to console instead\n\n            // Let the app keep running by returning an empty result.\n            return of(result as T);\n        };\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {apiUrl} from '../../environments/environment';\nimport {BehaviorSubject, Observable, of, Subject} from 'rxjs';\nimport {catchError, tap} from 'rxjs/operators';\nimport {JwtResponse} from '../response/JwtResponse';\nimport {CookieService} from 'ngx-cookie-service';\nimport {User} from \"../models/User\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserService {\n\n    private currentUserSubject: BehaviorSubject<JwtResponse>;\n    public currentUser: Observable<JwtResponse>;\n    public nameTerms = new Subject<string>();\n    public name$ = this.nameTerms.asObservable();\n    constructor(private http: HttpClient,\n                private cookieService: CookieService) {\n        const memo = localStorage.getItem('currentUser');\n        this.currentUserSubject = new BehaviorSubject<JwtResponse>(JSON.parse(memo));\n        this.currentUser = this.currentUserSubject.asObservable();\n        cookieService.set('currentUser', memo);\n    }\n\n    get currentUserValue() {\n        return this.currentUserSubject.value;\n    }\n\n\n    login(loginForm): Observable<JwtResponse> {\n        const url = `${apiUrl}/login`;\n        return this.http.post<JwtResponse>(url, loginForm).pipe(\n            tap(user => {\n                if (user && user.token) {\n                    this.cookieService.set('currentUser', JSON.stringify(user));\n                    if (loginForm.remembered) {\n                        localStorage.setItem('currentUser', JSON.stringify(user));\n                    }\n                    console.log((user.name));\n                    this.nameTerms.next(user.name);\n                    this.currentUserSubject.next(user);\n                    return user;\n                }\n            }),\n            catchError(this.handleError('Login Failed', null))\n        );\n    }\n\n    logout() {\n        this.currentUserSubject.next(null);\n        localStorage.removeItem('currentUser');\n        this.cookieService.delete('currentUser');\n    }\n\n    signUp(user: User): Observable<User> {\n        const url = `${apiUrl}/register`;\n        return this.http.post<User>(url, user);\n    }\n\n    update(user: User): Observable<User> {\n        const url = `${apiUrl}/profile`;\n        return this.http.put<User>(url, user);    }\n\n    get(email: string): Observable<User> {\n        const url = `${apiUrl}/profile/${email}`;\n        return this.http.get<User>(url);\n    }\n\n    /**\n     * Handle Http operation that failed.\n     * Let the app continue.\n     * @param operation - name of the operation that failed\n     * @param result - optional value to return as the observable result\n     */\n    private handleError<T>(operation = 'operation', result?: T) {\n        return (error: any): Observable<T> => {\n\n            console.log(error); // log to console instead\n\n            // Let the app keep running by returning an empty result.\n            return of(result as T);\n        };\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\nexport const apiUrl = 'http://10.0.0.20:31008/api';\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport {environment} from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}